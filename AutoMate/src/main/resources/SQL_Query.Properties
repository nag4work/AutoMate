DSDecisions_Detail_By_VIN_vehicleInfo=SELECT top 1 model_year,make,model,series+SPACE(1)+style AS trim,fuel_type,uvc FROM apiintegration.vins_decoded_bb_used_vehicles_list where input_vin='?' order by updated_datetime desc
DSDecisions_multiTrim_vehicleInfo=SELECT top 1 model_year,make,model,series+SPACE(1)+style AS trim,fuel_type,uvc FROM apiintegration.vins_decoded_bb_used_vehicles_list where input_vin='?' and uvc='?' order by updated_datetime desc
#DSDecisions_Detail_By_VIN_Features=SELECT distinct name,auto from apiintegration.vins_decoded_bb_add_deduct_list where input_vin='?'
DSDecisions_Detail_By_VIN_Features=SELECT name,auto from apiintegration.vins_decoded_bb_add_deduct_list where input_vin='?'and updated_datetime=(SELECT TOP 1 updated_datetime from apiintegration.vins_decoded_bb_add_deduct_list where input_vin='?' order by updated_datetime desc)
DSDecisions_multiTrim_Features=SELECT name,auto from apiintegration.vins_decoded_bb_add_deduct_list where input_vin='?vin' and uvc='?uvc' and updated_datetime=(SELECT TOP 1 updated_datetime from apiintegration.vins_decoded_bb_add_deduct_list where input_vin='?vin' and uvc='?uvc' order by updated_datetime desc)

#######################################CPI Data Query Properties #################################################
BBCPI_LOAD=select top 1 * from stage.BBCPI_LOAD order by QUEUEDTIME desc;
stage_BB_CPI_MODELLIST_Count=select count(*) from stage.BB_CPI_MODELLIST where load_id='?';
applications_BB_CPI_MODELLIST=select count(*) from applications.BB_CPI_MODELLIST where load_id='?';
stage_BB_CPI_MODELLIST_timestamp=select distinct DATE(CREATED_TIMESTAMP) As MYDate  from stage.BB_CPI_MODELLIST where load_id='?';
applications_BB_CPI_MODELLIST_timestamp=select distinct DATE(CREATED_TIMESTAMP) As MYDate  from applications.BB_CPI_MODELLIST where load_id='?';


#######################################States Data Query Properties #################################################
BBSTATE_load=select top 1 * from stage.BBSTATE_load order by 2 desc;
stage_BB_STATE_STATELIST_Count=select count(*) from stage.BB_STATE_STATELIST where load_id='?';
applications_BB_STATE_STATELIST_count=select count(*) from applications.BB_STATE_STATELIST where load_id='?';


#######################################Drilldown Data Query Properties #################################################
BBDRILLDOWN_LOAD=select top 1 * from stage.BBDRILLDOWN_LOAD  order by 2 desc;;
stage_BB_DRILLDOWN_STYLELIST_Count=select count(*) from stage.BB_DRILLDOWN_STYLELIST where load_id='?';
app_BB_DRILLDOWN_STYLELIST_Count=select count(*) from applications.BB_DRILLDOWN_STYLELIST where load_id='?';
stage_BB_DRILLDOWN_STYLELIST_TS=select distinct DATE(CREATED_TIMESTAMP) As MYDate  from stage.BB_DRILLDOWN_STYLELIST where load_id='?';
app_BB_DRILLDOWN_STYLELIST_TS=select distinct DATE(CREATED_TIMESTAMP) As MYDate  from applications.BB_DRILLDOWN_STYLELIST where load_id='?';


#######################################Retail Listing Data Query Properties #################################################
BBRETAILLISTING_LOAD=select top 1 * from stage.BBRETAILLISTING_LOAD  order by 2 desc;
stage_BB_RETAILISTING_LISTINGS_Count=select count(distinct listing_id) from stage.BB_RETAILISTING_LISTINGS where load_id='?';
app_BB_RETAILISTING_LISTINGS_Count=select count(distinct listing_id) from applications.BB_RETAILISTING_LISTINGS where load_id='?';
stage_BB_RETAILISTING_LISTINGS_TS=select distinct DATE(CREATED_TIMESTAMP) As MYDate  from stage.BB_RETAILISTING_LISTINGS where load_id='?';
app_BB_RETAILISTING_LISTINGS_TS=select distinct DATE(CREATED_TIMESTAMP) As MYDate  from applications.BB_RETAILISTING_LISTINGS where load_id='?';


#######################################API Monitoring Query Properties #################################################
To_Get_Exceptions_Count=SELECT COUNT(*) FROM [apiintegration].[logging_service] WHERE [environment_username] = 'PROD' AND [time_stamp] >= '?' AND [exception] != 'None' AND [machine_name] = 'ICO_CALCULATION_PROD'
To_Get_Non_Exceptions_Count=SELECT COUNT ( DISTINCT [event_type] ) FROM [apiintegration].[logging_service] WHERE [environment_username] = 'PROD' AND [time_stamp] >= '?'  AND [time_stamp] <= GETDATE() AND [exception] = 'None' AND [machine_name] = 'ICO_CALCULATION_PROD'
Total_Request=SELECT COUNT(*) FROM [apiintegration].[logging_service] WHERE [environment_username] = 'PROD' AND [time_stamp] >= '?' AND [time_stamp] <= GETDATE() AND [machine_name] = 'ICO_CALCULATION_PROD'
To_Get_Exception_Detail=SELECT [time_stamp],[message],[exception],[log_event],[event_type],[event_code],[source_context],[environment_username],[machine_name] FROM [apiintegration].[logging_service] WHERE [environment_username] = '?' AND [time_stamp] >= '?' AND [exception] != 'None' AND [machine_name] = 'ICO_CALCULATION_PROD' ORDER BY [time_stamp] DESC
To_Get_DriveWay_Count=SELECT COUNT(*) FROM CVP_PROD.APIINTEGRATION.DRIVEWAY_CUSTOMERS WHERE INSERTED_DATE >= '?' ORDER BY INSERTED_DATE DESC

Previous_day_Exceptions_Count=SELECT COUNT(*) FROM [apiintegration].[logging_service] WHERE [environment_username] = 'PROD' AND [time_stamp] >= '?' AND [time_stamp] < '?' AND [exception] != 'None' AND [machine_name] = 'ICO_CALCULATION_PROD'
Previous_day_Non_Exceptions_Count=SELECT COUNT ( DISTINCT [event_type] )  FROM [apiintegration].[logging_service] WHERE [environment_username] = 'PROD' AND [time_stamp] >= '?' AND [time_stamp] < '?' AND [exception] = 'None' AND [machine_name] = 'ICO_CALCULATION_PROD'
Previous_day_Total_Request=SELECT COUNT(*) FROM [apiintegration].[logging_service] WHERE [environment_username] = 'PROD' AND [time_stamp] >= '?' AND [time_stamp] < '?' AND [machine_name] = 'ICO_CALCULATION_PROD'
Previous_day_DriveWay_Count=SELECT COUNT(*) FROM CVP_PROD.APIINTEGRATION.DRIVEWAY_CUSTOMERS WHERE INSERTED_DATE >= '?' AND INSERTED_DATE < '?' ORDER BY INSERTED_DATE DESC


get_No_Price_Disposition_Vehicle_Details=SELECT REQUEST_ID, VIN, UVC, MILEAGE, ZIP_CODE, INSERTED_DATE FROM APIINTEGRATION.DRIVEWAY_CUSTOMERS Where ICO = 0 AND DISPOSITION = 'noPrice' AND NO_PRICE_TRIGGER_VALUES = 'Too Few Comparable Vehicles' AND INSERTED_DATE >= '?' AND INSERTED_DATE <= '?'
get_RPT_ICO_RETAILISTING_LOOKUP_Count=select count(*) from REPORTING.RPT_ICO_RETAILISTING_LOOKUP where uvc = '?' and mileage_band>=? and mileage_band<=? and FUEL_TYPE_FROM_VIN='?'
get_fuel_type=SELECT FUEL_TYPE FROM APIINTEGRATION.VINS_DECODED_BB_USED_VEHICLES_LIST where INPUT_VIN  ='?'
get_DriveWay_Customer_VINs=select distinct VIN,INSERTED_DATE from APIINTEGRATION.DRIVEWAY_CUSTOMERS where INSERTED_DATE >= '?' AND INSERTED_DATE <= '?' AND VIN !='NULL'
get_VINS_DECODED_BB_USED_VEHICLES_LIST_VINs=select count(*) from APIINTEGRATION.VINS_DECODED_BB_USED_VEHICLES_LIST where INPUT_VIN='?' AND UPDATED_DATETIME >= '?' AND UPDATED_DATETIME <= '?'

#######################################Cache Services Query Properties #################################################
Get_UVC_Count=SELECT count(*) FROM applications.slow_fast_seller
Get_ADD_DEDUCT_Count=SELECT count(name, input_vin, uvc, xclean, clean, avg, rough, created_datetime) as count_add_deduct FROM(SELECT name, input_vin, uvc, xclean, clean, avg, rough, created_datetime,ROW_NUMBER() OVER (PARTITION BY uvc ORDER BY created_datetime DESC) RK FROM apiintegration.vins_decoded_bb_add_deduct_list ) A WHERE RK = 1 order by uvc
Get_MILEAGE_ADJ_Count=select count(UVC,RANGE_BEGIN,RANGE_END,MODEL_YEAR,XCLEAN,CLEAN,AVG,ROUGH,FINADV,MILEAGE_CAT) as count_mileage_adj from (SELECT UVC, RANGE_BEGIN,RANGE_END,MODEL_YEAR,XCLEAN,CLEAN,AVG,ROUGH,FINADV,MILEAGE_CAT,row_number()over (partition by uvc order by updated_datetime desc) rn FROM APIINTEGRATION.VINS_DECODED_BB_MILEAGE_LIST) t where t.rn=1 order by UVC,RANGE_BEGIN,RANGE_END
Get_ZIPCODE_Count=select count(DISTINCT ZIP_CODE) from APPLICATIONS.NO_OFFER_ZIP_CODE
Get_MAI_add_Count=select count(distinct VIN) from REPORTING.VW_MAXDIGITAL_INVENTORY_ACTIVE
Get_MAI_delete_Count=select distinct vin from curated.hst_maxdigital_inventory_active where createdtimestamp >(select cast(max(createdtimestamp) as date) from curated.hst_maxdigital_inventory_active) and is_sold_delete in (2,3) except select vin from reporting.vw_maxdigital_inventory_active





#######################################Max Digital Hourly running Query Properties #################################################
get_dup_maxdigital_Active_Inventory=SELECT VIN,STOCK,DEALERID,MAXDIGITALSYNDICATIONID FROM REPORTING.vw_maxdigital_inventory_Active GROUP BY   VIN, stock,dealerid,MAXDIGITALSYNDICATIONID HAVING COUNT(1)>1
get_dup_Merchandise_Feed_Pre_Suppression=SELECT VIN,DEALER_STOCK,DEALERID,MAXDIGITAL_SYNDICATION_ID FROM CURATED.VW_ACTIVE_MERCHANDISE_INVENTORY GROUP BY VIN, dealer_Stock,dealerid,MAXDIGITAL_SYNDICATION_ID HAVING COUNT(1)>1
get_Maxdigital_Sold_inventory_VINs_decoded_BB=select count(*) from curated.maxdigital_inventory_sold A where NOT EXISTS( select 1 from applications.bb_usedvehiclebyvin_used_vehicles_list B WHERE A.VIN = B.VIN_NO) AND NOT EXISTS (select 1 from applications.bb_usedvehiclebyvin_error_messages c where A.VIN=C.VIN_NO)
get_Active_inventory_count=select count(*) from reporting.vw_maxdigital_inventory_active
get_Maxdigital_Active_inventory_VINs_exist_Merchandise_view_Pre_Suppression_count=select count(*) from reporting.vw_maxdigital_inventory_Active a where not exists (select 1 from curated.vw_active_merchandise_inventory b where a.vin=b.vin and a.stock=b.dealer_stock and a.dealerid=b.dealerid)
#get_Max_Active_Inventory_VINs_W_Dealerid_Stock_exist_Max_Sold_Inventory_cnt=select COUNT(*) FROM REPORTING.VW_maxdigital_inventory_active A where EXISTS(SELECT 1 FROM CURATED.MAXDIGITAL_INVENTORY_SOLD B WHERE A.VIN = B.VIN AND A.DEALERID=B.DEALERID AND A.STOCK = B.STOCK AND A.maxdigitalsyndicationid=B.maxdigitalsyndicationid)
#get_Max_Active_Inventory_VINs_W_Dealerid_Stock_exist_Max_Sold_Inventory_VINs=select a.vin FROM REPORTING.VW_maxdigital_inventory_active A where EXISTS(SELECT 1 FROM CURATED.MAXDIGITAL_INVENTORY_SOLD B WHERE A.VIN = B.VIN AND A.DEALERID=B.DEALERID AND A.STOCK = B.STOCK AND A.maxdigitalsyndicationid=B.maxdigitalsyndicationid)
get_Max_Active_Inventory_VINs_W_Dealerid_Stock_exist_Max_Sold_Inventory_cnt=WITH CTE_active_max_inventorydate AS ( select a.VIN,a.Stock,a.dealerid,a.inventorydate from ( select VIN,Stock,dealerid,inventorydate,row_number() over(partition by VIN,Stock,dealerid order by createdtimestamp desc) as rk from curated.maxdigital_inventory_active ) a where a.rk = 1 ) , CTE_sold_max_datesold AS ( select s.VIN,s.Stock,s.dealerid, CAST(MAX(Datesold) as DATE) as max_Datesold from curated.maxdigital_inventory_sold s INNER JOIN CTE_active_max_inventorydate a ON A.VIN = S.VIN AND A.Stock = S.Stock AND A.dealerid = S.dealerid group by s.VIN,s.Stock,s.dealerid ) , CTE_Active_Sold AS ( select s.VIN,s.Stock,s.dealerid from CTE_sold_max_datesold s INNER JOIN CTE_active_max_inventorydate a ON A.VIN = S.VIN AND A.Stock = S.Stock AND A.dealerid = S.dealerid where ifnull(s.max_Datesold,cast(current_timestamp as date)) >= ifnull(a.inventorydate,cast(current_timestamp as date)) ) select count(*) from CTE_Active_Sold
get_Max_Active_Inventory_VINs_W_Dealerid_Stock_exist_Max_Sold_Inventory_VINs=WITH CTE_active_max_inventorydate AS ( select a.VIN,a.Stock,a.dealerid,a.inventorydate from ( select VIN,Stock,dealerid,inventorydate,row_number() over(partition by VIN,Stock,dealerid order by createdtimestamp desc) as rk from curated.maxdigital_inventory_active ) a where a.rk = 1 ) , CTE_sold_max_datesold AS ( select s.VIN,s.Stock,s.dealerid, CAST(MAX(Datesold) as DATE) as max_Datesold from curated.maxdigital_inventory_sold s INNER JOIN CTE_active_max_inventorydate a ON A.VIN = S.VIN AND A.Stock = S.Stock AND A.dealerid = S.dealerid group by s.VIN,s.Stock,s.dealerid ) , CTE_Active_Sold AS ( select s.VIN,s.Stock,s.dealerid from CTE_sold_max_datesold s INNER JOIN CTE_active_max_inventorydate a ON A.VIN = S.VIN AND A.Stock = S.Stock AND A.dealerid = S.dealerid where ifnull(s.max_Datesold,cast(current_timestamp as date)) >= ifnull(a.inventorydate,cast(current_timestamp as date)) ) select vin from CTE_Active_Sold

get_Audit_Summary=select top 1 POST_SUPPRESSION_FILENAME_TO_DRIVEWAY from reporting.audit_driveway_maxdigital_summary order by AUDIT_INSERTED_TIMESTAMP desc
get_Booked_Suppr_rule_count_9A=select count(*) from reporting.vw_maxdigital_inventory_Active A where (a.DEALsTATUS ='B' OR A.INVENTORY_STATUS_CODE IN ('5','6'))  AND EXISTS (SELECT 1 FROM reporting.audit_driveway_maxdigital_detail B WHERE B.suppression_file_name = '?' AND SUPPRESSION_RULE_ID LIKE '%66%' AND A.VIN =B.VIN AND A.STOCK =B.DEALER_sTOCK AND A.DEALERID=B.LITHIA_233)
get_Booked_Sales_Status_9B=select distinct sales_status_booked from reporting.vw_maxdigital_inventory_Active A where (a.DEALsTATUS ='B' OR A.INVENTORY_STATUS_CODE IN ('5','6'))
get_Pending_Suppr_rule_count_9C=select count(*) from reporting.vw_maxdigital_inventory_Active A where (a.DEALsTATUS ='P' OR A.INVENTORY_STATUS_CODE ='2') AND EXISTS (SELECT 1 FROM reporting.audit_driveway_maxdigital_detail B WHERE B.suppression_file_name = '?' AND SUPPRESSION_RULE_ID LIKE '%66%' AND A.VIN =B.VIN AND A.STOCK =B.DEALER_sTOCK AND A.DEALERID=B.LITHIA_233)
get_Pending_Sales_Status_9D=select distinct sales_status_PENDING from reporting.vw_maxdigital_inventory_Active A where (a.DEALsTATUS ='P' OR A.INVENTORY_STATUS_CODE ='2')
get_In_Transit_Supp_rule_Count_10A=select count(*) from reporting.vw_maxdigital_inventory_Active A where (a.intransit_Status ilike 'In-transit' OR A.INVENTORY_STATUS_CODE ='12') AND EXISTS (SELECT 1 FROM reporting.audit_driveway_maxdigital_detail B WHERE B.suppression_file_name = 'full_file_for_search_20220505050019.csv.gz' AND SUPPRESSION_RULE_ID LIKE '%67%' AND A.VIN =B.VIN AND A.STOCK =B.DEALER_sTOCK AND A.DEALERID=B.LITHIA_233)
get_In_Transit_inventory_status_10B=select distinct inventory_status_intransit from reporting.vw_maxdigital_inventory_Active A where (a.intransit_Status ilike 'In-transit' OR A.INVENTORY_STATUS_CODE ='12')


#get_Booked_Pending_Suppresssion_rule=select count(*) from curated.driveway_merchandise_active_inventory A where exists (select 1 from CURATED.VW_ACTIVE_MERCHANDISE_INVENTORY b where b.dealstatus in ('B','P') AND A.VIN=B.VIN AND A.DEALER_STOCK =B.DEALER_sTOCK AND A.MAXDIGITAL_SYNDICATION_ID =B.MAXDIGITAL_SYNDICATION_ID)
#get_In_Transit_Suppresssion_rule=select count(*) FROM CURATED.VW_ACTIVE_MERCHANDISE_INVENTORY a where intransit_Status ='In-Transit' and exists (select 1 from curated.driveway_merchandise_active_inventory  b where a.vin =b.vin and a.dealer_stock= b.dealer_stock and a.dealerid=b.lithia_233)
get_dealerinvoiceprice_Suppression_rule=select count(*) FROM CURATED.VW_ACTIVE_MERCHANDISE_INVENTORY a where cast(dealer_invoice_price as decimal(10,2)) = 0 and vehicle_condition ='New' and exists (select 1 from curated.driveway_merchandise_active_inventory  b where a.vin =b.vin and a.dealer_stock= b.dealer_stock and a.dealerid=b.lithia_233)

#######################################Max Digital Daily running Query Properties #################################################
get_Maxdigital_Active_inventory_VINs_decoded_from_BB=select count(*) from reporting.vw_maxdigital_inventory_active A where NOT EXISTS( select 1 from applications.bb_usedvehiclebyvin_used_vehicles_list B WHERE A.VIN = B.VIN_NO) AND NOT EXISTS (select 1 from applications.bb_usedvehiclebyvin_error_messages c where A.VIN=C.VIN_NO)
get_Blackbook_Used_Vehicle_VIN_data_quality=SELECT count(vin_no) as total_record_count,100.0 * SUM(CASE WHEN IFNULL(cast(DRIVE_TRAIN as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS DRIVETRAIN,100.0 * SUM(CASE WHEN IFNULL(cast(model_year as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS model_year,100.0 * SUM(CASE WHEN IFNULL(cast(make as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS make,100.0 * SUM(CASE WHEN IFNULL(cast(model as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS model,100.0 * SUM(CASE WHEN IFNULL(cast(series as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS series,100.0 * SUM(CASE WHEN IFNULL(cast(style as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS style,100.0 * SUM(CASE WHEN IFNULL(cast(cylinders as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS cylinders,100.0 * SUM(CASE WHEN IFNULL(cast(engine_displacement as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS engine_displacement,100.0 * SUM(CASE WHEN IFNULL(cast(transmission as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS transmission,100.0 * SUM(CASE WHEN IFNULL(cast(ext_doors as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS ext_doors,100.0 * SUM(CASE WHEN IFNULL(cast(engine_description as nvarchar(200)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS engine_description,100.0 * SUM(CASE WHEN IFNULL(cast(fuel_type as nvarchar(20)),'') ='' THEN 1 ELSE 0 END) / COUNT(*) AS fuel_type fROM applications.bb_usedvehiclebyvin_used_vehicles_list
get_UI_count=select vehicle_condition,count(1) from curated.driveway_merchandise_active_inventory group by vehicle_Condition
get_Max_vs_BB_Year_or_Make_Mismatch=select  A.vin as MAX_VIN,A.year :: string as MAX_YEAR,A.Make AS MAX_MAKE,B.VEHICLE_MODEL_YEAR AS BB_YEAR,B.MAKE AS BB_MAKE from reporting.vw_maxdigital_inventory_active A left join CURATED.VW_ACTIVE_MERCHANDISE_INVENTORY B ON (A.VIN = B.VIN) WHERE (a.year :: string != b.vehicle_model_year OR lower(a.make) != lower(b.make)) AND (b.vehicle_model_year != ''   OR b.make != '')
get_Used_new_Cars_Count=select vehicle_condition, count(1) from curated.driveway_merchandise_active_inventory group by vehicle_condition
get_driveway_merchandise_active_inventory=select distinct RECONDITIONING_ORDER_OPEN, SALES_sTATUS_BOOKED, sales_status_pending, INVENTORY_STATUS_INTRANSIT from curated.driveway_merchandise_active_inventory



#######################################Max Digital:91323 Post-processing advisory alerts to driveway team #################################################
get_data_Post_Processing_advisory=SELECT VIN, Dealer_stock, Lithia_233, age, ASKINGPRICE, DRIVEWAY_PRICE, PHOTOCOUNT FROM "CURATED"."DRIVEWAY_MERCHANDISE_ACTIVE_INVENTORY" where age>=999 or TRY_TO_DECIMAL(ASKINGPRICE)>'999999.00'   or TRY_TO_DECIMAL(DRIVEWAY_PRICE)>'999999.00'  or TO_NUMBER(PHOTOCOUNT) > '60'
get_Post_Processing_Alert_FileName=select POST_SUPPRESSION_FILENAME_TO_DRIVEWAY from reporting.audit_driveway_maxdigital_summary order by AUDIT_INSERTED_TIMESTAMP desc limit 1;






#######################################EDI ERROR LOG #################################################
get_data_edi_error_logs=SELECT vin,processed_date,output_type,output_desc FROM error.edilogs where processed_date >='?' order by [processed_date] desc




#######################################Max Digital: Reporting: Monthly MAXDIGITAL_MASTER pipe load failure warning summaries #################################################
get_failure_warnings_DEV=select a.Environment,a.[DATE(UTC)],a.[Downtime (CVP DEV only)] ,CASE WHEN REPLACE(a.[Outage (CVP DEV)],',','') = ''  then 'No Outage'      Else  REPLACE(REPLACE(REPLACE(a.[Outage (CVP DEV)],',',''),a.[DATE(UTC)],''),':00.0000000','')  END [Outage (CVP DEV)] from ( select s.environment,s.pipeline_run_time as "DATE(UTC)",sum(s.file_outage_count) as "Downtime (CVP DEV only)" ,"Outage (CVP DEV)" = STUFF((           SELECT ', ' + case when b.file_outage = 'Outage' then b.file_date_range else '' end           FROM stage.maxdigital_pipe_load b           WHERE s.pipeline_run_time = cast(b.pipeline_run_time as date) and b.environment = 'DEV'           AND cast(pipeline_run_time as date) between cast(DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE())-1, 0) as date) AND cast(EOMONTH(getdate()) as date)           FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 1, '') FROM ( select environment ,cast(pipeline_run_time as date) as pipeline_run_time ,case when file_outage = 'Outage' then 1 else 0 end as file_outage_count from stage.maxdigital_pipe_load where environment = 'DEV' AND cast(pipeline_run_time as date) between cast(DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE())-1, 0) as date) AND cast(EOMONTH(getdate()) as date) ) s group by s.environment,s.pipeline_run_time ) a
get_failure_warnings_UAT=select a.Environment,a.[DATE(UTC)],a.[Downtime (CVP UAT only)] ,CASE WHEN REPLACE(a.[Outage (CVP UAT)],',','') = ''  then 'No Outage'          Else REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(a.[Outage (CVP UAT)],',',''),a.[DATE(UTC)],''),':00.0000000',''),'  ',''),'Z',', ')  END [Outage (CVP UAT)] from ( select s.environment,s.pipeline_run_time as "DATE(UTC)",sum(s.file_outage_count) as "Downtime (CVP UAT only)" ,"Outage (CVP UAT)" = STUFF((           SELECT ', ' + case when b.file_outage = 'Outage' then b.file_date_range else '' end           FROM stage.maxdigital_pipe_load b           WHERE s.pipeline_run_time = cast(b.pipeline_run_time as date) and b.environment = 'UAT'           AND cast(pipeline_run_time as date) between cast(DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE())-1, 0) as date) AND cast(EOMONTH(getdate()) as date)           FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 1, '') FROM ( select environment ,cast(pipeline_run_time as date) as pipeline_run_time ,case when file_outage = 'Outage' then 1 else 0 end as file_outage_count from stage.maxdigital_pipe_load where environment = 'UAT' AND cast(pipeline_run_time as date) between cast(DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE())-1, 0) as date) AND cast(EOMONTH(getdate()) as date) ) s group by s.environment,s.pipeline_run_time ) a
get_failure_warnings_PROD=select a.Environment,a.[DATE(UTC)],a.[Downtime (CVP PROD only)] ,CASE WHEN REPLACE(a.[Outage (CVP PROD)],',','') = ''  then 'No Outage'          Else REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(a.[Outage (CVP PROD)],',',''),a.[DATE(UTC)],''),':00.0000000',''),'  ',''),'Z',', ')  END [Outage (CVP PROD)] from ( select s.environment,s.pipeline_run_time as "DATE(UTC)",sum(s.file_outage_count) as "Downtime (CVP PROD only)" ,"Outage (CVP PROD)" = STUFF((           SELECT ', ' + case when b.file_outage = 'Outage' then b.file_date_range else '' end           FROM stage.maxdigital_pipe_load b           WHERE s.pipeline_run_time = cast(b.pipeline_run_time as date) and b.environment = 'PROD'           AND cast(pipeline_run_time as date) between cast(DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE())-1, 0) as date) AND cast(EOMONTH(getdate()) as date)           FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 1, '') FROM ( select environment ,cast(pipeline_run_time as date) as pipeline_run_time ,case when file_outage = 'Outage' then 1 else 0 end as file_outage_count from stage.maxdigital_pipe_load where environment = 'PROD' AND cast(pipeline_run_time as date) between cast(DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE())-1, 0) as date) AND cast(EOMONTH(getdate()) as date) ) s group by s.environment,s.pipeline_run_time ) a
To_Store_Historical_data=INSERT INTO [dbo].[maxdigital_pipe_load_historical] ([Prod_Environment],[Prod_DATE(UTC)],[Prod_Downtime ],[Prod_Outage],[Uat_Environment],[Uat_DATE(UTC)],[Uat_Downtime ],[Uat_Outage],[DM_Created_DateTime]) SELECT [Prod_Environment],[Prod_DATE(UTC)],[Prod_Downtime ],[Prod_Outage],[Uat_Environment],[Uat_DATE(UTC)],[Uat_Downtime ],[Uat_Outage],[DM_Created_DateTime] FROM [dbo].[maxdigital_pipe_load]
To_Truncate_Table=delete [dbo].[maxdigital_pipe_load]










